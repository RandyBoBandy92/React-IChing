{"version":3,"sources":["DekorneText/hexagramJSONS sync /^/.//hexagram.*/.json$","iChingData.js","App.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","iChingData","lines","value","undefined","transformValue","lineNum","image","process","transformImage","name","transformName","imagePaths","oldYin","oldYang","youngYin","youngYang","nothing","trigrams","upper","lower","transformedUpper","transformedLower","hexagram","number","transformNumber","hexagramText","primaryHexagramText","transformedHexagramText","textStyles","primaryHexText","display","transformedHexText","getTrigram","lowerLineName","middleLineName","upperLineName","getHexagramNumber","lowerTrigram","upperTrigram","getHexagramText","hexagramNumber","require","IChingText","props","divinationData","title","hexText","hexType","renderInnerText","textBlock","textElems","entries","key","push","this","renderHexTitle","other_titles","Judgment","Image","Commentary","Notes","line_1","line_2","line_3","line_4","line_5","line_6","styles","buttonStyles","resetButton","primaryHexButton","transHexButton","updateButtonStyles","className","style","onClick","updateTextDisplayState","target","innerHTML","resetLines","renderFancyTitle","renderDekorneText","React","Component","Line","auto","handleLineClick","line","transformDisplayProperty","primaryStyles","border","margin","transformedStyles","ref","autoClick","src","App","state","marginTop","bind","prevProps","prevState","checkTrigrams","checkHexagram","linesArray","line1","line2","line3","line4","line5","line6","transformedHexagramNumber","updateHexagramState","newPrimaryHexagramText","newTransformedHexagramText","setState","lowerTransformTrigram","upperTransformTrigram","makeLinesReadableToHumanPls","updateTrigramsState","updatedLines","userDesiredTextSection","newValue","getRandomNumber","newPath","getImagePath","newName","getName","newTransformValue","newTransformPath","newTransformName","min","max","Math","floor","random","lineComponents","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cdfff080.chunk.js","sourcesContent":["var map = {\n\t\"./hexagram1.json\": 17,\n\t\"./hexagram10.json\": 18,\n\t\"./hexagram11.json\": 19,\n\t\"./hexagram12.json\": 20,\n\t\"./hexagram13.json\": 21,\n\t\"./hexagram14.json\": 22,\n\t\"./hexagram15.json\": 23,\n\t\"./hexagram16.json\": 24,\n\t\"./hexagram17.json\": 25,\n\t\"./hexagram18.json\": 26,\n\t\"./hexagram19.json\": 27,\n\t\"./hexagram2.json\": 28,\n\t\"./hexagram20.json\": 29,\n\t\"./hexagram21.json\": 30,\n\t\"./hexagram22.json\": 31,\n\t\"./hexagram23.json\": 32,\n\t\"./hexagram24.json\": 33,\n\t\"./hexagram25.json\": 34,\n\t\"./hexagram26.json\": 35,\n\t\"./hexagram27.json\": 36,\n\t\"./hexagram28.json\": 37,\n\t\"./hexagram29.json\": 38,\n\t\"./hexagram3.json\": 39,\n\t\"./hexagram30.json\": 40,\n\t\"./hexagram31.json\": 41,\n\t\"./hexagram32.json\": 42,\n\t\"./hexagram33.json\": 43,\n\t\"./hexagram34.json\": 44,\n\t\"./hexagram35.json\": 45,\n\t\"./hexagram36.json\": 46,\n\t\"./hexagram37.json\": 47,\n\t\"./hexagram38.json\": 48,\n\t\"./hexagram39.json\": 49,\n\t\"./hexagram4.json\": 50,\n\t\"./hexagram40.json\": 51,\n\t\"./hexagram41.json\": 52,\n\t\"./hexagram42.json\": 53,\n\t\"./hexagram43.json\": 54,\n\t\"./hexagram44.json\": 55,\n\t\"./hexagram45.json\": 56,\n\t\"./hexagram46.json\": 57,\n\t\"./hexagram47.json\": 58,\n\t\"./hexagram48.json\": 59,\n\t\"./hexagram49.json\": 60,\n\t\"./hexagram5.json\": 61,\n\t\"./hexagram50.json\": 62,\n\t\"./hexagram51.json\": 63,\n\t\"./hexagram52.json\": 64,\n\t\"./hexagram53.json\": 65,\n\t\"./hexagram54.json\": 66,\n\t\"./hexagram55.json\": 67,\n\t\"./hexagram56.json\": 68,\n\t\"./hexagram57.json\": 69,\n\t\"./hexagram58.json\": 70,\n\t\"./hexagram59.json\": 71,\n\t\"./hexagram6.json\": 72,\n\t\"./hexagram60.json\": 73,\n\t\"./hexagram61.json\": 74,\n\t\"./hexagram62.json\": 75,\n\t\"./hexagram63.json\": 76,\n\t\"./hexagram64.json\": 77,\n\t\"./hexagram7.json\": 78,\n\t\"./hexagram8.json\": 79,\n\t\"./hexagram9.json\": 80\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 16;","// So whats the hierarchy of data values?\n// Lines\n// Trigrams\n// Hexagrams\n\nexport const iChingData = {\n    lines: [\n        {value: undefined, transformValue: undefined, lineNum: 6, id: 6, image: process.env.PUBLIC_URL + '/images/nothing.png', transformImage: process.env.PUBLIC_URL + '/images/nothing.png', name: undefined, transformName: undefined},\n        {value: undefined, transformValue: undefined, lineNum: 5, id: 5, image: process.env.PUBLIC_URL + '/images/nothing.png', transformImage: process.env.PUBLIC_URL + '/images/nothing.png', name: undefined, transformName: undefined},\n        {value: undefined, transformValue: undefined, lineNum: 4, id: 4, image: process.env.PUBLIC_URL + '/images/nothing.png', transformImage: process.env.PUBLIC_URL + '/images/nothing.png', name: undefined, transformName: undefined},\n        {value: undefined, transformValue: undefined, lineNum: 3, id: 3, image: process.env.PUBLIC_URL + '/images/nothing.png', transformImage: process.env.PUBLIC_URL + '/images/nothing.png', name: undefined, transformName: undefined},\n        {value: undefined, transformValue: undefined, lineNum: 2, id: 2, image: process.env.PUBLIC_URL + '/images/nothing.png', transformImage: process.env.PUBLIC_URL + '/images/nothing.png', name: undefined, transformName: undefined},\n        {value: undefined, transformValue: undefined, lineNum: 1, id: 1, image: process.env.PUBLIC_URL + '/images/nothing.png', transformImage: process.env.PUBLIC_URL + '/images/nothing.png', name: undefined, transformName: undefined},\n           ],\n    imagePaths: {\n        oldYin: process.env.PUBLIC_URL + '/images/old_yin.png',\n        oldYang: process.env.PUBLIC_URL + '/images/old_yang.png',\n        youngYin: process.env.PUBLIC_URL + '/images/young_yin.png',\n        youngYang: process.env.PUBLIC_URL + '/images/young_yang.png',\n        nothing: process.env.PUBLIC_URL + '/images/nothing.png'\n    },\n    trigrams: {\n        upper: {\n            value: undefined\n        },\n        lower: {\n            value: undefined\n        },\n        transformedUpper: {\n            value: undefined\n        },\n        transformedLower: {\n            value: undefined\n        }\n    },\n    hexagram: {\n        number: undefined,\n        transformNumber: undefined\n    },\n    hexagramText: {\n        primaryHexagramText: undefined,\n        transformedHexagramText: undefined\n    },\n    textStyles: {\n        primaryHexText: {\n          display: \"block\"\n        },\n        transformedHexText: {\n          display: \"none\"\n        }\n    }\n}\n\n\nexport function getTrigram(lowerLineName, middleLineName, upperLineName) {\n    // so lets start with thunder\n    if (upperLineName === 'yin' && middleLineName === 'yin' && lowerLineName === 'yang') {\n        return 'thunder'\n    } else if (upperLineName === 'yang' && middleLineName === 'yang' && lowerLineName === 'yin') {\n        return 'wind'\n    } else if (upperLineName === 'yang' && middleLineName === 'yin' && lowerLineName === 'yang') {\n        return 'fire'\n    } else if (upperLineName === 'yin' && middleLineName === 'yin' && lowerLineName === 'yin') {\n        return 'earth'\n    } else if (upperLineName === 'yin' && middleLineName === 'yang' && lowerLineName === 'yang') {\n        return 'lake'\n    } else if (upperLineName === 'yang' && middleLineName === 'yang' && lowerLineName ==='yang') {\n        return 'heaven'\n    } else if (upperLineName === 'yin' && middleLineName === 'yang' && lowerLineName === 'yin') {\n        return 'water'\n    } else if (upperLineName === 'yang' && middleLineName === 'yin' && lowerLineName === 'yin') {\n        return 'mountain'\n    }\n}\n\nexport function getHexagramNumber(lowerTrigram, upperTrigram) {\n    // console.log('get hex number function running')\n    let hexagramNumbers = {\n        // starting with all hexagrams that have lower trigram of thunder\n        'heaven': {\n            // upper trigrams go here\n            'heaven': 1,\n            'thunder': 34,\n            'water': 5,\n            'mountain': 26,\n            'earth': 11,\n            'wind': 9,\n            'fire': 14,\n            'lake': 43\n        },\n        'thunder': {\n            // upper trigrams go here\n            'heaven': 25,\n            'thunder': 51,\n            'water': 3,\n            'mountain': 27,\n            'earth': 24,\n            'wind': 42,\n            'fire': 21,\n            'lake': 17\n        },\n        'water': {\n            // upper trigrams go here\n            'heaven': 6,\n            'thunder': 40,\n            'water': 29,\n            'mountain': 4,\n            'earth': 7,\n            'wind': 59,\n            'fire': 64,\n            'lake': 47\n        },\n        'mountain': {\n            // upper trigrams go here\n            'heaven': 33,\n            'thunder': 62,\n            'water': 39,\n            'mountain': 52,\n            'earth': 15,\n            'wind': 53,\n            'fire': 56,\n            'lake': 31\n        },\n        'earth': {\n            // upper trigrams go here\n            'heaven': 12,\n            'thunder': 16,\n            'water': 8,\n            'mountain': 23,\n            'earth': 2,\n            'wind': 20,\n            'fire': 35,\n            'lake': 45\n        },\n        'wind': {\n            // upper trigrams go here\n            'heaven': 44,\n            'thunder': 32,\n            'water': 48,\n            'mountain': 18,\n            'earth': 46,\n            'wind': 57,\n            'fire': 50,\n            'lake': 28\n        },\n        'fire': {\n            // upper trigrams go here\n            'heaven': 13,\n            'thunder': 55,\n            'water': 63,\n            'mountain': 22,\n            'earth': 36,\n            'wind': 37,\n            'fire': 30,\n            'lake': 49\n        },\n        'lake': {\n            // upper trigrams go here\n            'heaven': 10,\n            'thunder': 54,\n            'water': 60,\n            'mountain': 41,\n            'earth': 19,\n            'wind': 61,\n            'fire': 38,\n            'lake': 58\n        },\n\n    }\n    // console.log(hexagramNumbers[lowerTrigram][upperTrigram])\n    return hexagramNumbers[lowerTrigram][upperTrigram]\n}\n\nexport function getTransformValue(value) {\n    if (value === 6) {\n        return 7\n    } else if (value === 9) {\n        return 8\n    } else {\n        return value\n    }\n}\n\nexport function getHexagramText(hexagramNumber) {\n    let hexagramText = require(`./DekorneText/hexagramJSONS/hexagram${hexagramNumber}.json`)\n    // console.log(`hexagram text is ${hexagramText}`)\n    return hexagramText\n}","import React from \"react\";\nimport {\n  iChingData,\n  getTrigram,\n  getHexagramNumber,\n  getTransformValue,\n  getHexagramText,\n} from \"./iChingData\";\n// const testJson = require('./DekorneText/hexagramJSONS/hexagram1.json')\n// console.log(testJson)\nimport './style.css'\n\nclass IChingText extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  renderFancyTitle(divinationData) {\n    if (divinationData.hexagram.number) {\n      if (\n        divinationData.hexagram.number !==\n        divinationData.hexagram.transformNumber\n      ) {\n        return (\n          <h1>\n            {divinationData.hexagramText.primaryHexagramText.title} -&gt;{\" \"}\n            {divinationData.hexagramText.transformedHexagramText.title}\n          </h1>\n        );\n      } else {\n        return <h1>{divinationData.hexagramText.primaryHexagramText.title}</h1>;\n      }\n    }\n  }\n\n  renderDekorneText(hexText, hexType) {\n    // I only want this to return something, if I actually have something to produce\n    let divinationData = this.props.divinationData;\n\n    function renderHexTitle(hexType) {\n      if (hexType === \"primary\") {\n        return <h2>Primary Hexagram: {hexText.title}</h2>;\n      } else {\n        return <h2>Transformed Hexagram: {hexText.title}</h2>;\n      }\n    }\n\n    function renderInnerText(textBlock) {\n      let textElems = [];\n      for (const [key, value] of Object.entries(textBlock)) {\n        textElems.push(\n          <p>\n            {key}: {value}\n          </p>\n        );\n      }\n      return textElems;\n    }\n\n    if (divinationData.hexagram.number) {\n      // if I have a working hexagram,\n      // I must also have working hexagram text\n\n      return (\n        <div>\n          {renderHexTitle(hexType)}\n          <h3>Other Titles: {hexText.other_titles}</h3>\n          <h4>Judgment:</h4>\n          {renderInnerText(hexText.Judgment)}\n          <h4>Image:</h4>\n          {renderInnerText(hexText.Image)}\n          <h4>Commentary:</h4>\n          {renderInnerText(hexText.Commentary)}\n          <h4>Notes:</h4>\n          <p>{hexText.Notes}</p>\n          <h4>Changing Lines:</h4>\n          <h5>Line 1:</h5>\n          {renderInnerText(hexText.line_1)}\n          <h5>Line 2:</h5>\n          {renderInnerText(hexText.line_2)}\n          <h5>Line 3:</h5>\n          {renderInnerText(hexText.line_3)}\n          <h5>Line 4:</h5>\n          {renderInnerText(hexText.line_4)}\n          <h5>Line 5:</h5>\n          {renderInnerText(hexText.line_5)}\n          <h5>Line 6:</h5>\n          {renderInnerText(hexText.line_6)}\n        </div>\n      );\n    }\n  }\n\n  updateButtonStyles(divinationData) {\n    // how many cases do I have?\n    // in case of no hexagram, display nothing - thats effectively done\n    if (divinationData.hexagram.number) {\n      this.styles.buttonStyles.resetButton.display = \"block\";\n    }\n    if (\n      divinationData.hexagram.number !== divinationData.hexagram.transformNumber\n    ) {\n      this.styles.buttonStyles.primaryHexButton.display = \"block\";\n      this.styles.buttonStyles.transHexButton.display = \"block\";\n    }\n    // in case of just a primary hexagram, display only reset button\n    // in case of primary and transformed hex, display all 3 buttons\n  }\n\n  render() {\n    this.styles = {\n      buttonStyles: {\n        primaryHexButton: {\n          display: \"none\",\n        },\n        transHexButton: {\n          display: \"none\",\n        },\n        resetButton: {\n          display: \"none\",\n        },\n      },\n    };\n\n    this.updateButtonStyles(this.props.divinationData);\n\n    return (\n      <div className=\"iching-text\">\n        <div className=\"button-menu\">\n          <button\n            style={this.styles.buttonStyles.primaryHexButton}\n            onClick={(e) =>\n              this.props.updateTextDisplayState(e.target.innerHTML)\n            }\n          >\n            Primary Hexagram\n          </button>\n          <button\n            style={this.styles.buttonStyles.transHexButton}\n            onClick={(e) =>\n              this.props.updateTextDisplayState(e.target.innerHTML)\n            }\n          >\n            Transformed Hexagram\n          </button>\n          <button\n            style={this.styles.buttonStyles.resetButton}\n            onClick={() => this.props.resetLines()}\n          >\n            Reset\n          </button>\n        </div>\n        {this.renderFancyTitle(this.props.divinationData)}\n        <div\n          className=\"primary-hexagram-text\"\n          style={this.props.styles.primaryHexText}\n        >\n          {this.renderDekorneText(\n            this.props.divinationData.hexagramText.primaryHexagramText,\n            \"primary\"\n          )}\n        </div>\n        <div\n          className=\"transformed-hexagram-text\"\n          style={this.props.styles.transformedHexText}\n        >\n          {this.renderDekorneText(\n            this.props.divinationData.hexagramText.transformedHexagramText,\n            \"transformed\"\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nclass Line extends React.Component {\n  constructor(props) {\n    super(props);\n    this.auto = false;\n  }\n\n  componentDidMount() {\n    if (this.auto) {\n      this.props.handleLineClick(this.props.line.lineNum);\n    }\n  }\n\n  render() {\n    function getUpdatedDisplayProperty(hexagram) {\n      // console.log(\"function called\")\n      if (hexagram.number && hexagram.transformNumber) {\n        // if they both are true, they equal something\n        // console.log(\"both hexagrams are something\")\n        if (hexagram.number !== hexagram.transformNumber) {\n          // but they arent the same number\n          return \"block\";\n        } else {\n          return \"none\";\n        }\n      } else {\n        return \"none\";\n      }\n    }\n    let transformDisplayProperty = getUpdatedDisplayProperty(\n      this.props.hexagram\n    );\n    this.primaryStyles = {\n      // width: \"200px\",\n      border: \"2px solid black\",\n      margin: \"2px 5px\",\n    };\n    this.transformedStyles = {\n      ...this.primaryStyles,\n      display: transformDisplayProperty,\n    };\n    return (\n      <div className={`line line-${this.props.line.lineNum}`}>\n        <img\n          className=\"primary-hexagram\"\n          ref={this.autoClick}\n          src={this.props.line.image}\n          style={this.primaryStyles}\n          onClick={() => this.props.handleLineClick(this.props.line.lineNum)}\n        />\n        <img\n          className=\"transformed-hexagram\"\n          src={this.props.line.transformImage}\n          style={this.transformedStyles}\n        />\n      </div>\n    );\n  }\n}\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = iChingData;\n    this.styles = {\n      margin: \"auto\",\n      marginTop: \"20px\",\n    };\n    this.handleLineClick = this.handleLineClick.bind(this);\n    this.resetLines = this.resetLines.bind(this);\n    this.updateTextDisplayState = this.updateTextDisplayState.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.lines !== this.state.lines) {\n      this.checkTrigrams();\n    } else if (prevState.trigrams !== this.state.trigrams) {\n      this.checkHexagram();\n    }\n  }\n\n  makeLinesReadableToHumanPls(linesArray) {\n    return {\n      line1: linesArray[5],\n      line2: linesArray[4],\n      line3: linesArray[3],\n      line4: linesArray[2],\n      line5: linesArray[1],\n      line6: linesArray[0],\n    };\n  }\n\n  checkHexagram() {\n    // console.log(\"check hexagram function running\");\n    if (this.state.trigrams.lower.value && this.state.trigrams.upper.value) {\n      // if both trigrams are truthy - have values\n      let hexagramNumber = getHexagramNumber(\n        this.state.trigrams.lower.value,\n        this.state.trigrams.upper.value\n      );\n      let transformedHexagramNumber = getHexagramNumber(\n        this.state.trigrams.transformedLower.value,\n        this.state.trigrams.transformedUpper.value\n      );\n      this.updateHexagramState(hexagramNumber, transformedHexagramNumber);\n    } else {\n      // console.log(\"hexagram cannot be generated yet\");\n    }\n  }\n\n  updateHexagramState(hexagramNumber, transformedHexagramNumber) {\n    let newPrimaryHexagramText = getHexagramText(hexagramNumber);\n    let newTransformedHexagramText = getHexagramText(transformedHexagramNumber);\n    // console.log(newPrimaryHexagramText);\n\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        hexagram: {\n          number: hexagramNumber,\n          transformNumber: transformedHexagramNumber,\n        },\n        hexagramText: {\n          primaryHexagramText: newPrimaryHexagramText,\n          transformedHexagramText: newTransformedHexagramText,\n        },\n        textStyles: {\n          primaryHexText: {\n            display: \"block\",\n          },\n          transformedHexText: {\n            display: \"none\",\n          },\n        },\n      };\n    });\n  }\n\n  checkTrigrams() {\n    let lines = this.makeLinesReadableToHumanPls(this.state.lines);\n    let lowerTrigram;\n    let upperTrigram;\n    let lowerTransformTrigram;\n    let upperTransformTrigram;\n\n    if (lines.line1.value && lines.line2.value && lines.line3.value) {\n      // if the 3 bottom lines have values\n      // console.log(\"Bottom trigram has value!\");\n      lowerTrigram = getTrigram(\n        lines.line1.name,\n        lines.line2.name,\n        lines.line3.name\n      );\n      lowerTransformTrigram = getTrigram(\n        lines.line1.transformName,\n        lines.line2.transformName,\n        lines.line3.transformName\n      );\n      // console.log(this.lowerTrigram);\n    }\n    if (lines.line4.value && lines.line5.value && lines.line6.value) {\n      // if the 3 upper lines have values\n      // console.log(\"Upper trigram has value!\");\n      upperTrigram = getTrigram(\n        lines.line4.name,\n        lines.line5.name,\n        lines.line6.name\n      );\n      upperTransformTrigram = getTrigram(\n        lines.line4.transformName,\n        lines.line5.transformName,\n        lines.line6.transformName\n      );\n      // console.log(this.upperTrigram);\n    }\n    this.updateTrigramsState(\n      lowerTrigram,\n      upperTrigram,\n      lowerTransformTrigram,\n      upperTransformTrigram\n    );\n  }\n\n  updateTrigramsState(\n    lowerTrigram,\n    upperTrigram,\n    lowerTransformTrigram,\n    upperTransformTrigram\n  ) {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        trigrams: {\n          upper: {\n            value: upperTrigram,\n          },\n          lower: {\n            value: lowerTrigram,\n          },\n          transformedUpper: {\n            value: upperTransformTrigram,\n          },\n          transformedLower: {\n            value: lowerTransformTrigram,\n          },\n        },\n      };\n    });\n  }\n\n  resetLines() {\n    // will reset all lines to factory conditions\n    this.setState((prevState) => {\n      const updatedLines = prevState.lines.map((line) => {\n        return {\n          ...line,\n          value: undefined,\n          transformValue: undefined,\n          image: iChingData.imagePaths.nothing,\n          transformImage: iChingData.imagePaths.nothing,\n          name: undefined,\n          transformName: undefined,\n        };\n      });\n      return {\n        ...prevState,\n        lines: updatedLines,\n        trigrams: {\n          upper: {\n            value: undefined,\n          },\n          lower: {\n            value: undefined,\n          },\n          transformedUpper: {\n            value: undefined,\n          },\n          transformedLower: {\n            value: undefined,\n          },\n        },\n        hexagram: {\n          number: undefined,\n          transformNumber: undefined,\n        },\n        hexagramText: {\n          primaryHexagramText: undefined,\n          transformedHexagramText: undefined,\n        },\n        textStyles: {\n          primaryHexText: {\n            display: \"block\",\n          },\n          transformedHexText: {\n            display: \"none\",\n          },\n        },\n      };\n    });\n  }\n\n  updateTextDisplayState(userDesiredTextSection) {\n    if (userDesiredTextSection === \"Primary Hexagram\") {\n      this.setState((prevState) => {\n        return {\n          ...prevState,\n          textStyles: {\n            primaryHexText: {\n              display: \"block\",\n            },\n            transformedHexText: {\n              display: \"none\",\n            },\n          },\n        };\n      });\n    } else if (userDesiredTextSection === \"Transformed Hexagram\") {\n      this.setState((prevState) => {\n        return {\n          ...prevState,\n          textStyles: {\n            primaryHexText: {\n              display: \"none\",\n            },\n            transformedHexText: {\n              display: \"block\",\n            },\n          },\n        };\n      });\n    }\n  }\n\n  handleLineClick(lineNum) {\n    // console.log(`Click detected on ${lineNum}`)\n    let newValue = this.getRandomNumber(6, 9);\n    let newPath = this.getImagePath(newValue);\n    let newName = this.getName(newValue);\n    let newTransformValue = getTransformValue(newValue);\n    let newTransformPath = this.getImagePath(newTransformValue);\n    let newTransformName = this.getName(newTransformValue);\n    // i need to write the function first and import it\n    this.setState((prevState) => {\n      const updatedLines = prevState.lines.map((line) => {\n        if (line.lineNum === lineNum) {\n          return {\n            ...line,\n            value: newValue,\n            transformValue: newTransformValue,\n            image: newPath,\n            transformImage: newTransformPath,\n            name: newName,\n            transformName: newTransformName,\n          };\n        }\n        return line;\n      });\n      return {\n        ...prevState,\n        lines: updatedLines,\n      };\n    });\n  }\n\n  getName(value) {\n    if (value === 6 || value === 8) {\n      return \"yin\";\n    } else {\n      return \"yang\";\n    }\n  }\n\n  getImagePath(value) {\n    if (value === 6) {\n      return this.state.imagePaths.oldYin;\n    } else if (value === 7) {\n      return this.state.imagePaths.youngYang;\n    } else if (value === 8) {\n      return this.state.imagePaths.youngYin;\n    } else if (value === 9) {\n      return this.state.imagePaths.oldYang;\n    }\n  }\n\n  getRandomNumber(min, max) {\n    // console.log(Math.floor(Math.random() * (max - min + 1)) + min)\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n  render() {\n    const lineComponents = this.state.lines.map((line) => (\n      <Line\n        line={line}\n        handleLineClick={this.handleLineClick}\n        image={line.image}\n        hexagram={this.state.hexagram}\n      />\n    ));\n    return (\n      <div style={this.styles} className=\"app\">\n        <div className=\"lines\">{lineComponents}</div>\n        <h5\n          style={\n            this.state.hexagram.number\n              ? { display: \"none\" }\n              : { display: \"block\" }\n          }\n        >\n          Click on the lines to randomly generate yin/yang lines.\n        </h5>\n        <IChingText\n          resetLines={this.resetLines}\n          className=\"divination-text\"\n          divinationData={this.state}\n          styles={this.state.textStyles}\n          updateTextDisplayState={this.updateTextDisplayState}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render(<App/>, document.getElementById(\"root\"))"],"sourceRoot":""}